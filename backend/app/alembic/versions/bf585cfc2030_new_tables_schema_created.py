"""new  tables schema created

Revision ID: bf585cfc2030
Revises: dc5b0a5c0c76
Create Date: 2025-08-04 15:53:11.006852

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'bf585cfc2030'
down_revision: Union[str, None] = 'dc5b0a5c0c76'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('images',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('format', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('label', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('original_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['original_id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('sku', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.create_table('jobs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('input_img_id', sa.Uuid(), nullable=False),
    sa.Column('input_product_id', sa.Uuid(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('processing_details', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['input_img_id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['input_product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_images',
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('image_id', sa.Uuid(), nullable=False),
    sa.Column('is_primary_crop', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('product_id', 'image_id')
    )
    op.create_table('indexing_results',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('created_crop_ids', sa.JSON(), nullable=True),
    sa.Column('selected_crop_id', sa.Uuid(), nullable=False),
    sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['selected_crop_id'], ['images.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id')
    )
    op.create_table('query_results',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('model_version', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id')
    )
    op.create_table('query_result_products',
    sa.Column('query_result_id', sa.Uuid(), nullable=False),
    sa.Column('matched_image_id', sa.Uuid(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['matched_image_id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['query_result_id'], ['query_results.id'], ),
    sa.PrimaryKeyConstraint('query_result_id', 'matched_image_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('query_result_products')
    op.drop_table('query_results')
    op.drop_table('indexing_results')
    op.drop_table('product_images')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_table('products')
    op.drop_table('images')
    # ### end Alembic commands ###
