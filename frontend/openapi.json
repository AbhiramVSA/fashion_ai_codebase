{"openapi": "3.1.0", "info": {"title": "FashionAI", "version": "0.1.0"}, "paths": {"/auth/login": {"post": {"tags": ["auth"], "summary": "Login Acces Token", "operationId": "auth-login_acces_token", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_auth-login_acces_token"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/auth/login/test-token": {"post": {"tags": ["auth"], "summary": "Test Token", "operationId": "auth-test_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/auth/login/refresh-token": {"get": {"tags": ["auth"], "summary": "Refresh Token", "operationId": "auth-refresh_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/auth/register": {"post": {"tags": ["auth"], "summary": "Register User", "operationId": "auth-register_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRegister"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "operationId": "users-read_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "delete": {"tags": ["users"], "summary": "Delete User Me", "operationId": "users-delete_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "patch": {"tags": ["users"], "summary": "Update User Me", "operationId": "users-update_user_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateMe"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/users/me/password": {"patch": {"tags": ["users"], "summary": "Update Password Me", "operationId": "users-update_password_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdatePassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User By Id", "operationId": "users-read_user_by_id", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users"], "summary": "Update User", "operationId": "users-update_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["users"], "summary": "Delete User", "operationId": "users-delete_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/users/": {"get": {"tags": ["users"], "summary": "Read Users", "operationId": "users-read_users", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/images/{image_id}": {"get": {"tags": ["images"], "summary": "Get Image Metadata", "description": "Get image metadata by ID.", "operationId": "images-get_image_metadata", "parameters": [{"name": "image_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "description": "ID of the image", "title": "Image Id"}, "description": "ID of the image"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ImageFile"}}}}, "404": {"description": "Image not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/images/": {"get": {"tags": ["images"], "summary": "List Imgs Metadata", "description": "List image metadata (paginated).", "operationId": "images-list_imgs_metadata", "parameters": [{"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 50, "minimum": 1, "description": "Number of items to return", "default": 10, "title": "Limit"}, "description": "Number of items to return"}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of items to skip", "default": 0, "title": "Offset"}, "description": "Number of items to skip"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ImageFile"}, "title": "Response Images-List Imgs Metadata"}}}}, "500": {"description": "Internal server error"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/images/{img_id}/download": {"get": {"tags": ["images"], "summary": "Download Img", "description": "Stream image bytes from S3/MinIO to client.\nNote: if using boto3 (sync) consider offloading to a threadpool to avoid blocking the event loop.", "operationId": "images-download_img", "parameters": [{"name": "img_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "description": "ID of the image to download", "title": "Img Id"}, "description": "ID of the image to download"}], "responses": {"200": {"description": "Image binary stream"}, "400": {"description": "Invalid bucket or request"}, "404": {"description": "Image metadata not found"}, "500": {"description": "Internal server error"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/images/{image_id}/crops": {"get": {"tags": ["images"], "summary": "Get Image Crops", "description": "Get all crops for an image.\nReturns a list of crop objects (replace with real model when available).", "operationId": "images-get_image_crops", "parameters": [{"name": "image_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "description": "ID of the image", "title": "Image Id"}, "description": "ID of the image"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ImageFile"}, "title": "Response Images-Get Image Crops"}}}}, "404": {"description": "Image not found"}, "500": {"description": "Internal server error"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/products/": {"post": {"tags": ["products"], "summary": "Create Product", "description": "Create a new product. Requires authenticated user.", "operationId": "products-create_product", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Product"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["products"], "summary": "List Products", "description": "Retrieve a list of products with pagination.", "operationId": "products-list_products", "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of items to skip", "default": 0, "title": "Offset"}, "description": "Number of items to skip"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "description": "Max number of items to return", "default": 10, "title": "Limit"}, "description": "Max number of items to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Product"}, "title": "Response Products-List Products"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/products/{product_id}": {"get": {"tags": ["products"], "summary": "Get Product", "description": "Get a single product by its ID.", "operationId": "products-get_product", "parameters": [{"name": "product_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "description": "ID of the product to retrieve", "title": "Product Id"}, "description": "ID of the product to retrieve"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Product"}}}}, "404": {"description": "Product not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["products"], "summary": "Update Product", "description": "Update an existing product. Requires authenticated user.", "operationId": "products-update_product", "parameters": [{"name": "product_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Product Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Product"}}}}, "404": {"description": "Product not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["products"], "summary": "Delete Product", "description": "Delete a product. Requires authenticated user.", "operationId": "products-delete_product", "parameters": [{"name": "product_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Product Id"}}], "responses": {"204": {"description": "Successful Response"}, "404": {"description": "Product not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/products/images/": {"get": {"tags": ["products"], "summary": "List Products Images", "description": "Retrieve a list of product images with pagination.", "operationId": "products-list_products_images", "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of items to skip", "default": 0, "title": "Offset"}, "description": "Number of items to skip"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "description": "Max number of items to return", "default": 10, "title": "Limit"}, "description": "Max number of items to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProductImage"}, "title": "Response Products-List Products Images"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/jobs/indexing": {"post": {"tags": ["jobs"], "summary": "Create Indexing Job", "description": "Create a new indexing job. Handles image upload, validates and starts processing.", "operationId": "jobs-create_indexing_job", "parameters": [{"name": "product_id", "in": "query", "required": true, "schema": {"type": "string", "format": "uuid", "description": "ID of the product to index", "title": "Product Id"}, "description": "ID of the product to index"}, {"name": "content-length", "in": "header", "required": true, "schema": {"type": "integer", "description": "Content-Length of the uploaded file", "title": "Content-Length"}, "description": "Content-Length of the uploaded file"}], "requestBody": {"required": true, "content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_jobs-create_indexing_job"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobResponse"}}}}, "413": {"description": "File too large"}, "415": {"description": "Unsupported media type"}, "404": {"description": "Product not found"}, "500": {"description": "Internal server error"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/jobs/querying": {"post": {"tags": ["jobs"], "summary": "Create Querying Job", "description": "Create a new querying job. Handles image upload, validates and starts processing.", "operationId": "jobs-create_querying_job", "parameters": [{"name": "content-length", "in": "header", "required": true, "schema": {"type": "integer", "description": "Content-Length of the uploaded file", "title": "Content-Length"}, "description": "Content-Length of the uploaded file"}], "requestBody": {"required": true, "content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_jobs-create_querying_job"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobResponse"}}}}, "413": {"description": "File too large"}, "415": {"description": "Unsupported media type"}, "500": {"description": "Internal server error"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/jobs/{job_id}/status": {"get": {"tags": ["jobs"], "summary": "Get Job Status", "description": "Get job status with optional results - optimized for frontend polling.", "operationId": "jobs-get_job_status", "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "description": "ID of the job", "title": "Job Id"}, "description": "ID of the job"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobResponse"}}}}, "404": {"description": "Job not found"}, "500": {"description": "Internal server error"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/jobs/": {"get": {"tags": ["jobs"], "summary": "List Jobs", "description": "List jobs with optional filtering.", "operationId": "jobs-list_jobs", "parameters": [{"name": "status", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/JobStatus"}, {"type": "null"}], "description": "Filter by job status", "title": "Status"}, "description": "Filter by job status"}, {"name": "job_type", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/JobType"}, {"type": "null"}], "description": "Filter by job type", "title": "Job Type"}, "description": "Filter by job type"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "description": "Number of jobs to return", "default": 50, "title": "Limit"}, "description": "Number of jobs to return"}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of jobs to skip", "default": 0, "title": "Offset"}, "description": "Number of jobs to skip"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Job"}, "title": "Response Jobs-List Jobs"}}}}, "500": {"description": "Internal server error"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/jobs/{job_id}": {"delete": {"tags": ["jobs"], "summary": "Cancel Job", "description": "Cancel a running job", "operationId": "jobs-cancel_job", "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Job Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/jobs/{job_id}/retry": {"post": {"tags": ["jobs"], "summary": "Retry Failed Job", "description": "Retry a failed job", "operationId": "jobs-retry_failed_job", "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Job Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_auth-login_acces_token": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "^password$"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "format": "password", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "format": "password", "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_auth-login_acces_token"}, "Body_jobs-create_indexing_job": {"properties": {"image_file": {"type": "string", "format": "binary", "title": "Image File", "description": "Product image to be indexed"}}, "type": "object", "required": ["image_file"], "title": "Body_jobs-create_indexing_job"}, "Body_jobs-create_querying_job": {"properties": {"image_file": {"type": "string", "format": "binary", "title": "Image File", "description": "Product image to be queried"}}, "type": "object", "required": ["image_file"], "title": "Body_jobs-create_querying_job"}, "BucketName": {"type": "string", "enum": ["product", "query"], "title": "BucketName"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ImageFile": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "bucket": {"$ref": "#/components/schemas/BucketName"}, "path": {"type": "string", "title": "Path"}, "filename": {"type": "string", "title": "Filename"}, "width": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Width"}, "height": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Height"}, "format": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Format"}, "label": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Label"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "original_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Original Id", "description": "ID of original image if this is a crop"}}, "type": "object", "required": ["bucket", "path", "filename", "width", "height", "format"], "title": "ImageFile"}, "Job": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "input_img_id": {"type": "string", "format": "uuid", "title": "Input Img Id"}, "input_product_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Input Product Id"}, "type": {"$ref": "#/components/schemas/JobType"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "processing_details": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Processing Details", "description": "details of the current step or error."}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["input_img_id", "type", "status"], "title": "Job"}, "JobResponse": {"properties": {"job_id": {"type": "string", "format": "uuid", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "job_type": {"$ref": "#/components/schemas/JobType"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Message"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "result": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Result"}, "is_completed": {"type": "boolean", "title": "Is Completed"}, "is_failed": {"type": "boolean", "title": "Is Failed"}, "is_processing": {"type": "boolean", "title": "Is Processing"}}, "type": "object", "required": ["job_id", "status", "job_type", "created_at", "is_completed", "is_failed", "is_processing"], "title": "JobResponse"}, "JobStatus": {"type": "string", "enum": ["queued", "started", "detecting", "labelling", "querying", "completed", "failed"], "title": "JobStatus"}, "JobType": {"type": "string", "enum": ["indexing", "querying"], "title": "JobType"}, "Message": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "Message"}, "Product": {"properties": {"sku": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sku", "description": "Unique SKU code, e.g., LEV501-BL-3232"}, "name": {"type": "string", "title": "Name", "description": "Product name, e.g., Levi's 501 Jeans"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description", "description": "Product description, e.g., Blue denim jeans, size 32x32"}, "price": {"type": "string", "title": "Price"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["name", "price"], "title": "Product"}, "ProductCreate": {"properties": {"sku": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sku", "description": "Unique SKU code, e.g., LEV501-BL-3232"}, "name": {"type": "string", "title": "Name", "description": "Product name, e.g., Levi's 501 Jeans"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description", "description": "Product description, e.g., Blue denim jeans, size 32x32"}, "price": {"anyOf": [{"type": "number"}, {"type": "string"}], "title": "Price"}}, "type": "object", "required": ["name", "price"], "title": "ProductCreate"}, "ProductImage": {"properties": {"product_id": {"type": "string", "format": "uuid", "title": "Product Id"}, "image_id": {"type": "string", "format": "uuid", "title": "Image Id"}, "is_primary_crop": {"type": "boolean", "title": "Is Primary Crop", "default": false}}, "type": "object", "required": ["product_id", "image_id"], "title": "ProductImage"}, "ProductUpdate": {"properties": {"sku": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sku", "description": "Unique SKU code, e.g., LEV501-BL-3232"}, "name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name", "description": "Product name, e.g., Levi's 501 Jeans"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description", "description": "Product description, e.g., Blue denim jeans, size 32x32"}, "price": {"anyOf": [{"type": "number"}, {"type": "string"}, {"type": "null"}], "title": "Price", "description": "Product price, e.g., 99.99"}}, "type": "object", "title": "ProductUpdate"}, "Token": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "bearer"}}, "type": "object", "required": ["access_token"], "title": "Token"}, "UpdatePassword": {"properties": {"current_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Current Password"}, "new_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "New Password"}}, "type": "object", "required": ["current_password", "new_password"], "title": "UpdatePassword"}, "UserPublic": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "role": {"$ref": "#/components/schemas/UserRole", "default": "client"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["email", "id"], "title": "UserPublic"}, "UserRegister": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Password"}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}}, "type": "object", "required": ["email", "password"], "title": "UserRegister"}, "UserRole": {"type": "string", "enum": ["admin", "client"], "title": "UserRole"}, "UserUpdate": {"properties": {"email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "role": {"$ref": "#/components/schemas/UserRole", "default": "client"}, "password": {"anyOf": [{"type": "string", "maxLength": 40, "minLength": 8}, {"type": "null"}], "title": "Password"}}, "type": "object", "title": "UserUpdate"}, "UserUpdateMe": {"properties": {"full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}}, "type": "object", "title": "UserUpdateMe"}, "UsersPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/UserPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "UsersPublic"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/auth/login"}}}}}}
